import pandas as pd
import numpy as np
from matplotlib import pyplot
dataset = pd.read_csv('data.csv')
print(dataset.shape)
dataset['diagnosis'] = dataset['diagnosis'].map({'B':0,'M':1}).astype(int)
print(dataset.head)
X = dataset.iloc[:,2:32].values
X
Y = dataset.iloc[:,1].values
Y
# data splitting
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,Y,test_size= 0.25,random_state =0 )
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
Y_train = sc.fit_transform(X_test)
# data validation
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis #import algorithms
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import StratifiedKFold
models = []
#model selection
models.append(('LR',LogisticRegression(solver='libliner',multi_class = 'ovr')))
models.append(('LDA',LinearDiscriminantAnalysis()))
models.append(('KNN',KNeighborsClassifier()))
models.append(('CART',DecisionTreeClassifier()))
models.append(('NB',GaussianNB()))
models.append(('SVM',SVC(gamma='auto')))
results =[]
names = []
res = []
for name, model in models:
  kfold = StratifiedKFold(n_splits=10,random_state =None)
  cv_results = cross_val_score(model,X_train,y_train,cv = kfold,scoring = 'accuracy')
  results.append(cv_results)
  names.append(name)
  res.append(cv_results.mean())
  print('%s: %f' % (name,cv_results.mean()))
  pyplot.ylim(.900,.999)
  pyplot.bar(names,res,color='blue', width = 0.5)
  pyplot.title('Algorithm comparison')
  pyplot.show()
  # training prediction
  from sklearn.svm import SVC
  model.fit(X_train,y_train)
  y_pred= model.predict(X_test)
  print(np.concatenate((y_pred.reshape(len(y_pred),1),y_test.reshape(len(y_test),1)),1))
